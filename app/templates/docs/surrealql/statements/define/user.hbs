<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements">Statements</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements.define"><code>DEFINE</code> statement</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.statements.define.user"><code>USER</code></Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2><code>DEFINE USER</code> statement</h2>
	<p>Use the <code>DEFINE USER</code> statement to create system users on SurrealDB.</p>
	<blockquote yellow text="Note">
		While existing logins still function, the <code>DEFINE LOGIN</code> statement has been replaced with <code>DEFINE USER</code>.
	</blockquote>

	<h4>Requirements</h4>
	<ul>
		<li>You must be authenticated with a user that has enough permissions. Only the <code>OWNER</code> built-in role grants permissions to create users.</li>
		<li>You must be authenticated with a user that has permissions on the level where you are creating the user:
			<ul>
				<li>Root users can create Root, Namespace and Database users.</li>
				<li>Namespace users can create Namespace and Database users</li>
				<li>Database user can create Database users.</li>
			</ul>
		</li>
		<li>To select the level where you want to create the user, <LinkTo @route="docs.surrealql.statements.use">you may need to select a namespace and/or database</LinkTo> before you can use the <code>DEFINE USER</code> statement.</li>
	</ul>
	<p>
		Note: You cannot use the <code>DEFINE USER</code> statement to create a <code>SCOPE</code> user.
	</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Statement syntax</h3>
	<Code @name="docs/surrealql/statements/define/user/syntax.typescript" text="SQL Syntax" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Example usage</h3>
	<p>The following example shows how you can create a <code>ROOT</code> user using the <code>DEFINE USER</code> statement.</p>
	<Code @name="docs/surrealql/statements/define/user/root-user.surql" />
	<p>The following example shows how you can create a <code>NAMESPACE</code> user using the <code>DEFINE USER</code> statement.</p>
	<Code @name="docs/surrealql/statements/define/user/namespace-user.surql" />
	<p>The following example shows how you can create a <code>DATABASE</code> user using the <code>DEFINE USER</code> statement.</p>
	<Code @name="docs/surrealql/statements/define/user/database-user.surql" />
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Roles</h3>
	<p>Currently, only the built-in roles <code>OWNER</code>, <code>EDITOR</code> and <code>VIEWER</code> are available.</p>
</Layout::Text>

<Layout::Gap tiny />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-20>Role</th>
				<th w-80>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<code>OWNER</code>
				</td>
				<td>
					Can view and edit any resource on the user's level or below, including user and token (IAM) resources.
					<br>It also grants full permissions for child resources that support the `PERMISSIONS` clause (tables, fields, etc.)
				</td>
			</tr>
			<tr>
				<td>
					<code>EDITOR</code>
				</td>
				<td>
					Can view and edit any resource on the user's level or below, but not users or token (IAM) resources
					<br>It also grants full permissions for child resources that support the `PERMISSIONS` clause (tables, fields, etc.)
				</td>
			</tr>
			<tr>
				<td>
					<code>VIEWER</code>
				</td>
				<td>
					Grants permissions to view any resource on the user's level or below, but not edit.
					<br>It also grants view permissions for child resources that support the `PERMISSIONS` clause (tables, fields, etc.)
				</td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap large />
