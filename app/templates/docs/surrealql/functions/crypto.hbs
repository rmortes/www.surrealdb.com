<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions">Functions</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions.crypto">Crypto functions</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2>Crypto functions</h2>
	<p>These functions can be used when hashing data, encrypting data, and for securely authenticating users into the database.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-40>Function</th>
				<th w-60>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<a href="#md5">
						<code>crypto::md5()</code>
					</a>
				</td>
				<td>Returns the md5 hash of a value</td>
			</tr>
			<tr>
				<td>
					<a href="#sha1">
						<code>crypto::sha1()</code>
					</a>
				</td>
				<td>Returns the sha1 hash of a value</td>
			</tr>
			<tr>
				<td>
					<a href="#sha256">
						<code>crypto::sha256()</code>
					</a>
				</td>
				<td>Returns the sha256 hash of a value</td>
			</tr>
			<tr>
				<td>
					<a href="#sha512">
						<code>crypto::sha512()</code>
					</a>
				</td>
				<td>Returns the sha512 hash of a value</td>
			</tr>
			<tr>
				<td>
					<a href="#argon2-compare">
						<code>crypto::argon2::compare()</code>
					</a>
				</td>
				<td>Compares an argon2 hash to a password</td>
			</tr>
			<tr>
				<td>
					<a href="#argon2-generate">
						<code>crypto::argon2::generate()</code>
					</a>
				</td>
				<td>Generates a new argon2 hashed password</td>
			</tr>
			<tr>
				<td>
					<a href="#bcrypt-compare">
						<code>crypto::bcrypt::compare()</code>
					</a>
				</td>
				<td>Compares an bcrypt hash to a password</td>
			</tr>
			<tr>
				<td>
					<a href="#bcrypt-generate">
						<code>crypto::bcrypt::generate()</code>
					</a>
				</td>
				<td>Generates a new bcrypt hashed password</td>
			</tr>
			<tr>
				<td>
					<a href="#pbkdf2-compare">
						<code>crypto::pbkdf2::compare()</code>
					</a>
				</td>
				<td>Compares an pbkdf2 hash to a password</td>
			</tr>
			<tr>
				<td>
					<a href="#pbkdf2-generate">
						<code>crypto::pbkdf2::generate()</code>
					</a>
				</td>
				<td>Generates a new pbkdf2 hashed password</td>
			</tr>
			<tr>
				<td>
					<a href="#scrypt-compare">
						<code>crypto::scrypt::compare()</code>
					</a>
				</td>
				<td>Compares an scrypt hash to a password</td>
			</tr>
			<tr>
				<td>
					<a href="#scrypt-generate">
						<code>crypto::scrypt::generate()</code>
					</a>
				</td>
				<td>Generates a new scrypt hashed password</td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Layout::Group {{waypoint "md5"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::md5</h3>
		<p>The <code>crypto::md5</code> function returns the md5 hash of the input value.</p>
		<Code @name="docs-surrealql-functions-crypto-md5.surql" text="API Definition">
			crypto::md5(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-md5-input.surql">
				RETURN crypto::md5("tobie");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-md5-result.txt">
				"4768b3fc7ac751e03a614e2349abf3bf"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "sha1"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::sha1</h3>
		<p>The <code>crypto::sha1</code> function returns the sha1 hash of the input value.</p>
		<Code @name="docs-surrealql-functions-crypto-sha1.surql" text="API Definition">
			crypto::sha1(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-sha1-input.surql">
				RETURN crypto::sha1("tobie");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-sha1-result.txt">
				"c6be709a1b6429472e0c5745b411f1693c4717be"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "sha256"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::sha256</h3>
		<p>The <code>crypto::sha256</code> function returns the sha256 hash of the input value.</p>
		<Code @name="docs-surrealql-functions-crypto-sha256.surql" text="API Definition">
			crypto::sha256(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-sha256-input.surql">
				RETURN crypto::sha256("tobie");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-sha256-result.txt">
				"33fe1859daba927ea5674813adc1cf34b9e2795f2b7e91602fae19c0d0c493af"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "sha512"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::sha512</h3>
		<p>The <code>crypto::sha512</code> function returns the sha512 hash of the input value.</p>
		<Code @name="docs-surrealql-functions-crypto-sha512.surql" text="API Definition">
			crypto::sha512(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-sha512-input.surql">
				RETURN crypto::sha512("tobie");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-sha512-result.txt">
				"39f0160c946c4c53702112d6ef3eea7957ea8e1c78787a482a89f8b0a8860a20ecd543432e4a187d9fdcd1c415cf61008e51a7e8bf2f22ac77e458789c9cdccc"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "argon2-compare"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::argon2::compare</h3>
		<p>The <code>crypto::argon2::compare</code> function compares a hashed-and-salted argon2 password value with an unhashed password value.</p>
		<Code @name="docs-surrealql-functions-crypto-argon2-compare.surql" text="API Definition">
			crypto::argon2::compare(string, any) -> bool
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-argon2-compare-input.surql">
				LET $hash = "$argon2id$v=19$m=4096,t=3,p=1$pbZ6yJ2rPJKk4pyEMVwslQ$jHzpsiB+3S/H+kwFXEcr10vmOiDkBkydVCSMfRxV7CA";
				LET $pass = "this is a strong password";
				RETURN crypto::argon2::compare($hash, $pass);
			</Code>
			<Code @name="docs-surrealql-functions-crypto-argon2-compare-result.txt">
				true
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "argon2-generate"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::argon2::generate</h3>
		<p>The <code>crypto::argon2::generate</code> function hashes and salts a password using the argon2 hashing algorithm.</p>
		<Code @name="docs-surrealql-functions-crypto-argon2-generate.surql" text="API Definition">
			crypto::argon2::generate(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-argon2-generate-input.surql">
				RETURN crypto::argon2::generate("this is a strong password");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-argon2-generate-result.txt">
				"$argon2id$v=19$m=4096,t=3,p=1$pbZ6yJ2rPJKk4pyEMVwslQ$jHzpsiB+3S/H+kwFXEcr10vmOiDkBkydVCSMfRxV7CA"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "bcrypt-compare"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::bcrypt::compare</h3>
		<p>The <code>crypto::bcrypt::compare</code> function compares a hashed-and-salted bcrypt password value with an unhashed password value.</p>
		<Code @name="docs-surrealql-functions-crypto-bcrypt-compare.surql" text="API Definition">
			crypto::bcrypt::compare(string, any) -> bool
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-bcrypt-compare-input.surql">
				LET $hash = "$2b$12$OD7hrr1Hycyk8NUwOekYY.cogCICpUnwNvDZ9NiC1qCPHzpVAQ9BO";
				LET $pass = "this is a strong password";
				RETURN crypto::bcrypt::compare($hash, $pass);
			</Code>
			<Code @name="docs-surrealql-functions-crypto-bcrypt-compare-result.txt">
				true
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "bcrypt-generate"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::bcrypt::generate</h3>
		<p>The <code>crypto::bcrypt::generate</code> function hashes and salts a password using the bcrypt hashing algorithm.</p>
		<Code @name="docs-surrealql-functions-crypto-bcrypt-generate.surql" text="API Definition">
			crypto::bcrypt::generate(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-bcrypt-generate-input.surql">
				RETURN crypto::bcrypt::generate("this is a strong password");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-bcrypt-generate-result.txt">
				"$2b$12$OD7hrr1Hycyk8NUwOekYY.cogCICpUnwNvDZ9NiC1qCPHzpVAQ9BO"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "pbkdf2-compare"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::pbkdf2::compare</h3>
		<p>The <code>crypto::pbkdf2::compare</code> function compares a hashed-and-salted pbkdf2 password value with an unhashed password value.</p>
		<Code @name="docs-surrealql-functions-crypto-pbkdf2-compare.surql" text="API Definition">
			crypto::pbkdf2::compare(string, any) -> bool
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-pbkdf2-compare-input.surql">
				LET $hash = "$pbkdf2-sha256$i=10000,l=32$DBURRPJODKEt0IId1Lqe+w$Ve8Z00mibHDSKLbyKTceEBBcDpGoK0AEUl7QzDTIec4";
				LET $pass = "this is a strong password";
				RETURN crypto::pbkdf2::compare($hash, $pass);
			</Code>
			<Code @name="docs-surrealql-functions-crypto-pbkdf2-compare-result.txt">
				true
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "pbkdf2-generate"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::pbkdf2::generate</h3>
		<p>The <code>crypto::pbkdf2::generate</code> function hashes and salts a password using the pbkdf2 hashing algorithm.</p>
		<Code @name="docs-surrealql-functions-crypto-pbkdf2-generate.surql" text="API Definition">
			crypto::pbkdf2::generate(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-pbkdf2-generate-input.surql">
				RETURN crypto::pbkdf2::generate("this is a strong password");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-pbkdf2-generate-result.txt">
				"$pbkdf2-sha256$i=10000,l=32$DBURRPJODKEt0IId1Lqe+w$Ve8Z00mibHDSKLbyKTceEBBcDpGoK0AEUl7QzDTIec4"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "scrypt-compare"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::scrypt::compare</h3>
		<p>The <code>crypto::scrypt::compare</code> function compares a hashed-and-salted scrypt password value with an unhashed password value.</p>
		<Code @name="docs-surrealql-functions-crypto-scrypt-compare.surql" text="API Definition">
			crypto::scrypt::compare(string, any) -> bool
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-scrypt-compare-input.surql">
				LET $hash = "$scrypt$ln=15,r=8,p=1$8gl7bipl0FELTy46YJOBrw$eRcS1qR22GI8VHo58WOXn9JyfDivGo5yTJFvpDyivuw";
				LET $pass = "this is a strong password";
				RETURN crypto::scrypt::compare($hash, $pass);
			</Code>
			<Code @name="docs-surrealql-functions-crypto-scrypt-compare-result.txt">
				true
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "scrypt-generate"}}>

	<Layout::Text text-l text-f>
		<h3>crypto::scrypt::generate</h3>
		<p>The <code>crypto::scrypt::generate</code> function hashes and salts a password using the scrypt hashing algorithm.</p>
		<Code @name="docs-surrealql-functions-crypto-scrypt-generate.surql" text="API Definition">
			crypto::scrypt::generate(any) -> string
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-crypto-scrypt-generate-input.surql">
				RETURN crypto::scrypt::generate("this is a strong password");
			</Code>
			<Code @name="docs-surrealql-functions-crypto-scrypt-generate-result.txt">
				"$scrypt$ln=15,r=8,p=1$8gl7bipl0FELTy46YJOBrw$eRcS1qR22GI8VHo58WOXn9JyfDivGo5yTJFvpDyivuw"
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap large />