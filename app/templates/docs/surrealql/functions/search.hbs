<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions">Functions</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions.search">Search functions</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Search functions</h2>
	<p>These functions are used in conjunction with the 'matches' operator to either collect the relevance score or highlight the searched keywords within the content.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-40>Function</th>
				<th w-60>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<a href="#score">
						<code>search::score()</code>
					</a>
				</td>
				<td>Returns the relevance score</td>
			</tr>
			<tr>
				<td>
					<a href="#highlight">
						<code>search::highlight()</code>
					</a>
				</td>
				<td>Highlights the matching keywords</td>
			</tr>
			<tr>
				<td>
					<a href="#offsets">
						<code>search::offsets()</code>
					</a>
				</td>
				<td>Returns the position of the matching keywords</td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Layout::Group {{waypoint "score"}}>

	<Layout::Text text-l text-f>
		<h3><code>search::score</code></h3>
		<p>The <code>search::score</code> returns the relevance score corresponding to the given 'matches' predicate reference numbers.</p>
		<Code @name="docs-surrealql-functions-search-score.surql" text="API Definition">
				search::score(number) -> number
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-search-score-input.surql">
				SELECT id, title, search::score(1) AS score FROM book
					WHERE title @1@ 'rust web'
					ORDER BY score DESC;
			</Code>
			<Code @name="docs-surrealql-functions-search-score-result.js">
				[
					{
						id: book:1,
						score: 0.9227996468544006,
						title: [ 'Rust Web Programming' ],
					}
				]
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap mini />

<Layout::Group {{waypoint "highlight"}}>

	<Layout::Text text-l text-f>
		<h3><code>search::highlight</code></h3>
		<p>The <code>search::highlight</code> highlights the matching keywords for the predicate reference number.</p>
		<Code @name="docs-surrealql-functions-search-highlight.surql" text="API Definition">
				search::highlight(string, string, number) -> string | string[]
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-search-highlight-input.surql">
				SELECT id, search::highlight('<b>', '</b>', 1) AS title
					FROM book WHERE title @1@ 'rust web';
			</Code>
			<Code @name="docs-surrealql-functions-search-highlight-result.js">
				[
					{
						id: book:1,
						title: [ '<b>Rust</b> <b>Web</b> Programming' ]
					}
				]
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap mini />

<Layout::Group {{waypoint "offsets"}}>

	<Layout::Text text-l text-f>
		<h3><code>search::offsets</code></h3>
		<p>The <code>search::offsets</code> returns the position of the matching keywords for the predicate reference number.</p>
		<Code @name="docs-surrealql-functions-search-offsets.surql" text="API Definition">
				search::offsets(number) -> object
		</Code>
		<p>The following example shows this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-search-offsets-input.surql">
				SELECT id, title, search::offsets(1) AS title_offsets
					FROM book WHERE title @1@ 'rust web';
			</Code>
			<Code @name="docs-surrealql-functions-search-offsets-result.js">
				[
					{
						id: book:1,
						title: [ 'Rust Web Programming' ],
						title_offsets: {
							0: [
								{ e: 4, s: 0 },
								{ e: 8, s: 5 }
							]
						}
					}
				]
			</Code>
		</codes>
		<p>The output returns the start <code>s</code> and end <code>e</code> positions of each matched term found within the original field.</p>
		<p>The full-text index is capable of indexing both single strings and arrays of strings.
			In this example, the key <code>0</code> indicates that we're highlighting the first string within the <code>title</code> field, which contains an array of strings.</p>
	</Layout::Text>

</Layout::Group>

<Layout::Gap large />
