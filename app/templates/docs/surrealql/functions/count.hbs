<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions">Functions</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.functions.count">Count functions</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
    <h2>Count functions</h2>
	<p>These functions can be used when counting field values and expressions.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-40>Function</th>
				<th w-60>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<a href="#count">
						<code>count()</code>
					</a>
				</td>
				<td>Counts a row, or whether a given value is truthy</td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Layout::Group {{waypoint "count"}}>

	<Layout::Text text-l text-f>
		<h3>count</h3>
		<p>The <code>count</code> function counts the number of times that the function is called. This is useful for returning the total number of rows in a <Link @link="docs.surrealql.statements.select"><code>SELECT</code></Link> statement with a <code>GROUP BY</code> clause.</p>
		<Code @name="docs-surrealql-functions-count-1.surql" text="API Definition">
			count() -> 1
		</Code>
		<p>If a value is given as the first argument, then this function checks whether a given value is truthy. This is useful for returning the total number of rows, which match a certain condition, in a <Link @link="docs.surrealql.statements.select"><code>SELECT</code></Link> statement, with a <code>GROUP BY</code> clause.</p>
		<Code @name="docs-surrealql-functions-count-2.surql" text="API Definition">
			count(any) -> number
		</Code>
		<p>If an array is given, this function counts the number of items in the array which are truthy. If, instead, you want to count the total number of items in the given array, then use the <Link @link="docs.surrealql.functions.array"><code>array::len()</code></Link> function.</p>
		<Code @name="docs-surrealql-functions-count-3.surql" text="API Definition">
			count(array) -> number
		</Code>
		<p>The following examples show this function, and its output, when used in a <Link @link="docs.surrealql.statements.return"><code>RETURN</code></Link> statement:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-1.surql">
				RETURN count();
			</Code>
			<Code @name="docs-surrealql-functions-count-result-1.txt">
				1
			</Code>
		</codes>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-2.surql">
				RETURN count(true);
			</Code>
			<Code @name="docs-surrealql-functions-count-result-2.txt">
				1
			</Code>
		</codes>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-3.surql">
				RETURN count(10 > 15);
			</Code>
			<Code @name="docs-surrealql-functions-count-result-3.txt">
				0
			</Code>
		</codes>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-4.surql">
				RETURN count([ 1, 2, 3, null, 0, false, (15 > 10), rand::uuid() ]);
			</Code>
			<Code @name="docs-surrealql-functions-count-result-4.txt">
				5
			</Code>
		</codes>
		<p>The following examples show this function being used in a <Link @link="docs.surrealql.statements.select"><code>SELECT</code></Link> statement with a <code>GROUP</code> clause:</p>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-5.surql">
				SELECT count() FROM [{ age: 33 }, { age: 45 }, { age: 39 }] GROUP ALL;
			</Code>
			<Code @name="docs-surrealql-functions-count-result-5.txt">
				3
			</Code>
		</codes>
		<codes vertical>
			<Code @name="docs-surrealql-functions-count-input-6.surql">
				SELECT count(age > 35) FROM [{ age: 33 }, { age: 45 }, { age: 39 }] GROUP ALL;
			</Code>
			<Code @name="docs-surrealql-functions-count-result-6.txt">
				2
			</Code>
		</codes>
		<p>An advanced example of the count function can be seen below:</p>
		<codes>
			<Code @name="docs-surrealql-functions-count-input-advanced.surql">
				SELECT
					country,
					count(age > 30) AS total
				FROM [
					{ age: 33, country: 'GBR' },
					{ age: 45, country: 'GBR' },
					{ age: 39, country: 'USA' },
					{ age: 29, country: 'GBR' },
					{ age: 43, country: 'USA' }
				]
				GROUP BY country;
			</Code>
			<Code @name="docs-surrealql-functions-count-result-advanced.txt">
				[
					{
						country: 'GBR',
						total: 2
					},
					{
						country: 'USA',
						total: 2
					}
				]
			</Code>
		</codes>
	</Layout::Text>

</Layout::Group>

<Layout::Gap large />
