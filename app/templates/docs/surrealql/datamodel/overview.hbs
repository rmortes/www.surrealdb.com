<Layout::Text text-l text-f>
	<h3>Data types</h3>
	<p>SurrealQL allows you to describe data with specific data types.</p>
	<Layout::Table>
		<table>
			<thead>
				<tr>
					<th w-30>Type</th>
					<th w-70>Description</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>
						<code>any</code>
					</td>
					<td>
						Use this when you explicitly don't want to specify the field's data type. The field will allow any data type supported by SurrealDB.
					</td>
				</tr>
				<tr>
					<td>
						<code>array</code>
					</td>
					<td>
						An array of items. The array type also allows you to define which types can be stored in the array and the max length.
						<ul>
							<li><code>array</code></li>
							<li><code>array{{ "<" }}string></code></li>
							<li><code>array{{ "<" }}string, 10></code></li>
						</ul>
					</td>
				</tr>
				<tr>
					<td>
						<code>set</code>
					</td>
					<td>
						An set of items. The array type also allows you to define which types can be stored in the array and the max length. Items are automatically deduplicated.
						<ul>
							<li><code>set</code></li>
							<li><code>set{{ "<" }}string></code></li>
							<li><code>set{{ "<" }}string, 10></code></li>
						</ul>
					</td>
				</tr>
				<tr>
					<td>
						<code>bool</code>
					</td>
					<td>
						Describes whether something is thruthy or not.
					</td>
				</tr>
				<tr>
					<td>
						<code>datetime</code>
					</td>
					<td>
						An ISO 8601 compliant data type that stores a date with time and time zone.
					</td>
				</tr>
				<tr>
					<td>
						<code>decimal</code>
					</td>
					<td>
						Uses BigDecimal for storing any real number with arbitrary precision.
					</td>
				</tr>
				<tr>
					<td>
						<code>duration</code>
					</td>
					<td>
						Store a value representing a length of time. Can be added or subtracted from datetimes or other durations.
					</td>
				</tr>
				<tr>
					<td>
						<code>float</code>
					</td>
					<td>
						Store a value in a 64 bit float.
					</td>
				</tr>
				<tr>
					<td>
						<code>int</code>
					</td>
					<td>
						Store a value in a 64 bit integer.
					</td>
				</tr>
				<tr>
					<td>
						<code>number</code>
					</td>
					<td>
						Store numbers without specifying the type. SurrealDB will detect the type of number and store it using the minimal number of bytes. For numbers passed in as a string, this field will store the number in a BigDecimal.
					</td>
				</tr>
				<tr>
					<td>
						<code>object</code>
					</td>
					<td>
						Store formatted objects containing values of any supported type with no limit to object depth or nesting.
					</td>
				</tr>
				<tr>
					<td>
						<code>string</code>
					</td>
					<td>
						Describes a text-like value.
					</td>
				</tr>
				<tr>
					<td>
						<code>record</code>
					</td>
					<td>
						Store a reference to another record. The value must be a Record ID.
						<ul>
							<li><code>record</code></li>
							<li><code>record{{ "<" }}string></code></li>
							<li><code>record{{ "<" }}string | number></code></li>
						</ul>
					</td>
				</tr>
				<tr>
					<td>
						<code>geometry</code>
					</td>
					<td>
						<a href="https://www.rfc-editor.org/rfc/rfc7946" target="_blank" title="Link to RFC 7946">RFC 7946</a> compliant data type for storing geometry in the <a href="https://geojson.org/" target="_blank" title="Link to the GeoJson website">GeoJson format</a>.
						<p>Geometric Types include:
							<ul>
								<li><code>feature</code></li>
								<li><code>point</code></li>
								<li><code>line</code></li>
								<li><code>polygon</code></li>
								<li><code>multipoint</code></li>
								<li><code>multiline</code></li>
								<li><code>multipolygon</code></li>
								<li><code>collection</code></li>
							</ul>
						</p>
						<Code @name="docs/surrealql/statements/define/field/geometry-types-field.surql" />
					</td>
				</tr>
			</tbody>
		</table>
	</Layout::Table>
</Layout::Text>