<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.surrealql">SurrealQL</Crumb::Item>
	<Crumb::Item @link="docs.surrealql.datamodel">Data model</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2>Data model</h2>
	<p>SurrealDB comes with a large number of in-built types, designed specifically for a scalable cloud database which operates directly from the web. To get started with the basic concepts of the data model view one of the sections below.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Boxes cols-3-to-2-to-1>
	<LinkTo @route="docs.surrealql.datamodel.overview">
		<Layout::Boxes::Item mini hover>
			<h4>Overview</h4>
			<p>Summary of all data types available in SurrealQL</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.ids">
		<Layout::Boxes::Item mini hover>
			<h4>Record IDs</h4>
			<p>Understand how record or document IDs work in SurrealDB</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.simple">
		<Layout::Boxes::Item mini hover>
			<h4>Simple types</h4>
			<p>Boolean values, empty values, and null values</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.strings">
		<Layout::Boxes::Item mini hover>
			<h4>Strings</h4>
			<p>Strings can be used to store text and unicode values</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.numbers">
		<Layout::Boxes::Item mini hover>
			<h4>Numbers</h4>
			<p>Integers, floating point numbers and decimal numbers</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.datetimes">
		<Layout::Boxes::Item mini hover>
			<h4>Datetimes</h4>
			<p>Datetimes and durations can be used to store and manipulate dates and times</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.formatters">
		<Layout::Boxes::Item mini hover>
			<h4>Formatters</h4>
			<p>Special syntax for formatting functions to build strings</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.uuids">
		<Layout::Boxes::Item mini hover>
			<h4>UUIDs</h4>
			<p>SurrealDB will automatically detect and parse valid UUIDs within strings</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.objects">
		<Layout::Boxes::Item mini hover>
			<h4>Objects</h4>
			<p>Store objects with no limit to the depth of any nested objects or values</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.arrays">
		<Layout::Boxes::Item mini hover>
			<h4>Arrays</h4>
			<p>Store arrays of values with no limit to the depth of the arrays</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.geometries">
		<Layout::Boxes::Item mini hover>
			<h4>Geometries</h4>
			<p>Geolocation points and GeoJSON values can be used to store geometry data</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.records">
		<Layout::Boxes::Item mini hover>
			<h4>Record links</h4>
			<p>Use record links to point to and link directly with records in other tables</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.futures">
		<Layout::Boxes::Item mini hover>
			<h4>Futures</h4>
			<p>Use futures to store values which should only be computed when retrieving data</p>
		</Layout::Boxes::Item>
	</LinkTo>
	<LinkTo @route="docs.surrealql.datamodel.casting">
		<Layout::Boxes::Item mini hover>
			<h4>Casting</h4>
			<p>SurrealDB makes it easy to convert values between different data types</p>
		</Layout::Boxes::Item>
	</LinkTo>
</Layout::Boxes>

<Layout::Gap large />